10 REM 3-D LABYRINTH for the IBM PC     (C) G. Wheeler 1984
20 REM =====================================================
30 REM
40 REM
50 RANDOMIZE TIMER:OPTION BASE 0:DEF FNRAN(X)=INT(RND*X)
60 CLS:PRINT "MAZE SIZE":PRINT:INPUT "WIDTH";SIZEX:INPUT "DEPTH";SIZEY
70 DIM MZA(SIZEX,SIZEY),MZB(SIZEX,SIZEY)
80 FOR X=0 TO SIZEX:FOR Y=0 TO SIZEY:MZA(X,Y)=9:NEXT :NEXT
90 SCREEN 1:CLS:Y=FNRAN(SIZEY):ENTX=0:X=-1:ENTY=Y:DIREC=1:LASTDIR=DIREC:KEY OFF
100 COLOR 0,0:PSET (X*2+2,199-Y*2),1
110 TRIES=0:IF FNRAN(3)=1 THEN DIREC=FNRAN(4)
120 DX=0:DY=0:ON (DIREC+1) GOTO 130,140,150,160  'Select a start direction
130 DY=1:GOTO 170
140 DX=1:GOTO 170
150 DY=-1:GOTO 170
160 DX=-1
170 IF X+DX>SIZEX-1 OR X+DX<0 OR Y+DY>SIZEY-1 OR Y+DY<0 THEN TRIES=TRIES+1:GOTO 230 'Out of maze - try a different direction
180 IF MZA(X+DX,Y+DY)<>9 THEN TRIES=TRIES+1:GOTO 230  'Node already used - try another
190 X=X+DX:Y=Y+DY  'Node OK - move to it
200 MZA(X,Y)=DIREC:GOSUB 1160  'Remember route and determine properties
210 LINE -(X*2+2,199-Y*2),1
220 GOTO 110
230 IF TRIES>3 THEN GOTO 280  'All directions attempted - backtrack
240 IF TRIES>2 THEN DIR3=DIREC:GOTO 270 'Select the last unused direction
250 IF TRIES>1 THEN DIR2=DIREC:DIR3=9:GOTO 270  'Select an unused direction
260 DIR1=DIREC:DIR2=9:DIR3=9
270 DIREC=FNRAN(4):IF DIREC=DIR1 OR DIREC=DIR2 OR DIREC=DIR3 THEN GOTO 270 ELSE GOTO 120  'Pick an unused direction and continue
280 DIREC=MZA(X,Y)+4:MZA(X,Y)=DIREC 'Set direction to backtrack
290 GOSUB 1310:DIREC=DIREC-4  'Add a dead end to node properties
300 DX=0:DY=0:ON (DIREC+1) GOTO 310,320,330,340  'Select backtrack offset
310 DY=-1:GOTO 350
320 DX=-1:GOTO 350
330 DY=1:GOTO 350
340 DX=1
350 X=X+DX:Y=Y+DY:IF X=ENTX THEN IF Y=ENTY THEN GOTO 490  'Backtrack coordinates and check for maze completion (ie, total backtrack )
360 PSET (X*2+2,199-Y*2),2:FOR LP=0 TO 29:NEXT:PSET (X*2+2,199-Y*2),1
370 IF X+1<SIZEX THEN IF MZA (X+1,Y)=9 THEN DIREC=1:GOTO 420  'Can go right
380 IF Y+1<SIZEY THEN IF MZA(X,Y+1)=9 THEN DIREC=0:GOTO 420 'Can go up
390 IF X>0 THEN IF MZA(X-1,Y)=9 THEN DIREC=3:GOTO 420 'Can go left
400 IF Y>0 THEN IF MZA(X,Y-1)=9 THEN DIREC=2:GOTO 420 'Can go down
410 DIREC=MZA(X,Y):GOTO 300 'Carry on backtracking
420 PSET (X*2+2,199-Y*2),1:F%=MZB(X,Y) 'Succesful backtrack - open route
430 IF DIREC=0 THEN F%=(F% AND 14) 'Open route up 1110
440 IF DIREC=1 THEN F%=(F% AND 13) 'Open route right 1101
450 IF DIREC=2 THEN F%=(F% AND 11) 'Open route down 1011
460 IF DIREC=3 THEN F%=(F% AND 7) 'Open route left 0111
470 MZB(X,Y)=F% 'Update node
480 LASTDIR=DIREC:GOTO 120 'Continue from this node
490 X=SIZEX-1  'Select an exit point
500 Y=0
510 IF MZA(X,Y)>3 THEN GOTO 530
520 Y=Y+1:IF Y<SIZEY THEN GOTO 510 ELSE Y=FNRAN(SIZEY)
530 LINE (X*2+2,199-Y*2)-(X*2+4,199-Y*2),1
540 EXITX=X:EXITY=Y
550 MZB(X,Y)=MZB(X,Y) AND 13
560 LOCATE 1,1:PRINT "MAZE COMPLETE":PRINT "HIT ANY KEY TO BEGIN"
570 A$=INKEY$:IF A$="" THEN GOTO 570
580 MZB(ENTX,ENTY)=MZB(ENTX,ENTY) OR 8 'Close up entrance
590 ORIENT=1:Y=ENTY:X=ENTX:SCREEN 1:COLOR 0,1 'Set start position and direction
600 CLS:DEDEND=0 'Begin drawing scene
610 WALL=0:GOSUB 1480 'Process current node
620 LINE (19,160)-(19,20):LINE (299,160)-(299,20)
630 IF F% MOD 2=1 THEN LINE (19,160)-(299,160):LINE (19,20)-(299,20):DEDEND=-1:GOTO 930
640 GOSUB 1380 'Depth 1  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
650 IF WALL THEN GOTO 930
660 IF F%>7 THEN LINE (63,146)-(19,160):LINE (63,34)-(19,20):GOTO 680
670 LINE (19,146)-(63,146):LINE (19,34)-(63,34)
680 IF (F% MOD 4)>1 THEN LINE (255,146)-(299,160):LINE (255,34)-(299,20):GOTO 700
690 LINE (255,146)-(299,146):LINE (255,34)-(299,34)
700 IF F% MOD 2=1 THEN LINE (63,146)-(255,146):LINE (63,34)-(255,34):GOTO 930
710 GOSUB 1450 'Depth 2 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
720 IF WALL THEN GOTO 930
730 IF F%>7 THEN LINE (99,135)-(63,146):LINE (99,45)-(63,34):GOTO 750
740 LINE (99,45)-(63,45):LINE (99,135)-(63,135):LINE (63,146)-(63,34)
750 IF (F% MOD 4)>1 THEN LINE (219,135)-(255,146):LINE (219,45)-(255,34):GOTO 770
760 LINE (219,135)-(255,135):LINE (219,45)-(255,45):LINE (255,146)-(255,34)
770 IF F% MOD 2=1 THEN LINE (99,135)-(219,135):LINE (99,45)-(219,45):GOTO 930
780 GOSUB 1450 'Depth 3 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
790 IF WALL THEN GOTO 930
800 IF F%>7 THEN LINE (129,126)-(99,135):LINE (129,54)-(99,45):GOTO 820
810 LINE (129,54)-(99,54):LINE (129,126)-(99,126):LINE (99,135)-(99,45)
820 IF (F% MOD 4)>1 THEN LINE (189,126)-(219,135):LINE (189,54)-(219,45):GOTO 840
830 LINE (189,54)-(219,54):LINE (189,126)-(219,126):LINE (219,135)-(219,45)
840 IF F% MOD 2=1 THEN LINE (129,126)-(189,126):LINE (129,54)-(189,54):GOTO 930
850 GOSUB 1450 'Depth 4 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
860 IF WALL THEN GOTO 930
870 IF F%>7 THEN LINE (149,120)-(129,126):LINE (149,60)-(129,54):GOTO 890
880 LINE (149,120)-(129,120):LINE (149,60)-(129,60):LINE (129,126)-(129,54)
890 IF (F% MOD 4)>1 THEN LINE (169,120)-(189,126):LINE (169,60)-(189,54):GOTO 910
900 LINE (169,120)-(189,120):LINE (169,60)-(189,60):LINE (189,126)-(189,54)
910 IF F% MOD 2=1 THEN LINE (149,60)-(169,60):LINE (149,120)-(169,120):GOTO 930
920 LINE (149,120)-(149,60):LINE (169,120)-(169,60)
930 LINE (310,5)-(310,15),1:LINE (305,10)-(315,10),1
940 LOCATE 1,1:PRINT "YOU ARE AT ";X;"-";Y;" FACING "; 'Help routine
950 ON (ORIENT+1) GOTO 960,970,980,990
960 PRINT "NORTH":LINE (308,7)-(310,5),1:LINE -(312,7),1:GOTO 1000
970 PRINT "EAST":LINE (313,12)-(315,10),1:LINE -(313,8),1:GOTO 1000
980 PRINT "SOUTH":LINE (308,13)-(310,15),1:LINE -(312,13),1:GOTO 1000
990 PRINT "WEST":LINE (307,12)-(305,10),1:LINE -(307,8),1
1000 MOVE$=INKEY$:IF MOVE$="" THEN GOTO 1000 'Get move
1010 IF MOVE$<>"R" THEN GOTO 1040 ELSE ORIENT=ORIENT+1 'Turn right
1020 IF ORIENT=4 THEN ORIENT=0
1030 GOTO 1140
1040 IF MOVE$<>"L" THEN GOTO 1070 ELSE ORIENT=ORIENT-1 'Turn left
1050 IF ORIENT<0 THEN ORIENT=3
1060 GOTO 1140
1070 IF MOVE$="F" AND DEDEND THEN BEEP:GOTO 1140  'Cant go forward
1080 IF MOVE$<>"F" THEN BEEP:GOTO 1140 'Invalid move
1090 ON (ORIENT+1) GOTO 1100,1110,1120,1130 'Move
1100 Y=Y+1:GOTO 1140
1110 X=X+1:GOTO 1140
1120 Y=Y-1:GOTO 1140
1130 X=X-1
1140 ENTX=X:ENTY=Y:IF ENTX>EXITX THEN IF ENTY=EXITY THEN SCREEN 0:CLS:PRINT "WELL DONE!!!":PRINT :END
1150 GOTO 600
1160 IF DIREC MOD 2=0 THEN MZB(X,Y)=10 ELSE MZB(X,Y)=5 'Put in side walls
1170 IF DIREC=LASTDIR THEN RETURN 'Return if not a corner
1180 REM Node properties are stored in array MZB. Each has four bits of relevant
1190 REM information in the form LDRU (left,down,right,up), with a 1 indicating
1200 REM a wall and a 0 a passage. This routine stores the relevant info for
1210 REM corner nodes.
1220 IF LASTDIR=0 THEN IF DIREC=1 THEN F%=9:GOTO 1300
1230 IF LASTDIR=3 THEN IF DIREC=2 THEN F%=9:GOTO 1300
1240 IF LASTDIR=0 THEN IF DIREC=3 THEN F%=3:GOTO 1300
1250 IF LASTDIR=1 THEN IF DIREC=2 THEN F%=3:GOTO 1300
1260 IF LASTDIR=2 THEN IF DIREC=3 THEN F%=6:GOTO 1300
1270 IF LASTDIR=1 THEN IF DIREC=0 THEN F%=6:GOTO 1300
1280 IF LASTDIR=3 THEN IF DIREC=0 THEN F%=12:GOTO 1300
1290 IF LASTDIR=2 THEN IF DIREC=1 THEN F%=12
1300 MZB(X-DX,Y-DY)=F%:LASTDIR=DIREC:RETURN
1310 F%=MZB(X,Y)
1320 REM This routine adds walls to the node to form dead-ends.
1330 IF DIREC=4 THEN F%=F% OR 1:GOTO 1370 'Add wall above
1340 IF DIREC=5 THEN F%=F% OR 2:GOTO 1370 'Add wall on right
1350 IF DIREC=6 THEN F%=F% OR 4:GOTO 1370 'Add wall below
1360 F%=F% OR 8                           'Add wall on left
1370 MZB(X,Y)=F%:RETURN
1380 REM This routine processes the view node by node for the drawing routine.
1390 REM Lines 4070-4100 rotate the node info to the correct orientation.
1400 DX=0:DY=0:ON (ORIENT+1) GOTO 1410,1420,1430,1440
1410 DY=1:GOTO 1450
1420 DX=1:GOTO 1450
1430 DY=-1:GOTO 1450
1440 DX=-1
1450 ENTX=ENTX+DX:ENTY=ENTY+DY:WALL=0
1460 IF ENTX=EXITX+1 THEN IF ENTY=EXITY THEN F%=10:WALL=-1:RETURN
1470 IF ENTX<0 OR ENTY<0 OR ENTX>=SIZEX OR ENTY>=SIZEY THEN F%=15:WALL=-1:RETURN
1480 F%=MZB(ENTX,ENTY):TURNS=ORIENT
1490 CARRY=F% MOD 2:IF TURNS=0 THEN RETURN
1500 F%=F%/2+7*CARRY
1510 TURNS=TURNS-1:GOTO 1490
