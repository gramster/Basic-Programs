10 RANDOMIZE TIMER:OPTION BASE 0:DEF FNRAN(X)=INT(RND*X)
20 CLS:PRINT "MAZE SIZE":PRINT:INPUT "WIDTH";SIZEX:INPUT "DEPTH";SIZEY
30 DIM MZA(SIZEX,SIZEY),MZB(SIZEX,SIZEY)
40 FOR X=0 TO SIZEX:FOR Y=0 TO SIZEY:MZA(X,Y)=9:NEXT :NEXT
50 SCREEN 1:CLS:Y=FNRAN(SIZEY):ENTX=0:X=-1:ENTY=Y:DIREC=1:LASTDIR=DIREC:KEY OFF
60 COLOR 0,0:PSET (X*2+2,199-Y*2),1
70 TRIES=0:IF FNRAN(3)=1 THEN DIREC=FNRAN(4)
80 DX=0:DY=0:ON (DIREC+1) GOTO 90,100,110,120  'Select a start direction
90 DY=1:GOTO 130
100 DX=1:GOTO 130
110 DY=-1:GOTO 130
120 DX=-1
130 IF X+DX>SIZEX-1 OR X+DX<0 OR Y+DY>SIZEY-1 OR Y+DY<0 THEN TRIES=TRIES+1:GOTO 190 'Out of maze - try a different direction
140 IF MZA(X+DX,Y+DY)<>9 THEN TRIES=TRIES+1:GOTO 190  'Node already used - try another
150 X=X+DX:Y=Y+DY  'Node OK - move to it
160 MZA(X,Y)=DIREC:GOSUB 1170  'Remember route and determine properties
170 LINE -(X*2+2,199-Y*2),1
180 GOTO 70
190 IF TRIES>3 THEN GOTO 240  'All directions attempted - backtrack
200 IF TRIES>2 THEN DIR3=DIREC:GOTO 230 'Select the last unused direction
210 IF TRIES>1 THEN DIR2=DIREC:DIR3=9:GOTO 230  'Select an unused direction
220 DIR1=DIREC:DIR2=9:DIR3=9
230 DIREC=FNRAN(4):IF DIREC=DIR1 OR DIREC=DIR2 OR DIREC=DIR3 THEN GOTO 230 ELSE GOTO 80  'Pick an unused direction and continue
240 DIREC=MZA(X,Y)+4:MZA(X,Y)=DIREC 'Set direction to backtrack
250 GOSUB 1320:DIREC=DIREC-4  'Add a dead end to node properties
260 DX=0:DY=0:ON (DIREC+1) GOTO 270,280,290,300  'Select backtrack offset
270 DY=-1:GOTO 310
280 DX=-1:GOTO 310
290 DY=1:GOTO 310
300 DX=1
310 X=X+DX:Y=Y+DY:IF X=ENTX THEN IF Y=ENTY THEN GOTO 450  'Backtrack coordinates and check for maze completion (ie, total backtrack )
320 PSET (X*2+2,199-Y*2),2:FOR LP=0 TO 29:NEXT:PSET (X*2+2,199-Y*2),1
330 IF X+1<SIZEX THEN IF MZA (X+1,Y)=9 THEN DIREC=1:GOTO 380  'Can go right
340 IF Y+1<SIZEY THEN IF MZA(X,Y+1)=9 THEN DIREC=0:GOTO 380 'Can go up
350 IF X>0 THEN IF MZA(X-1,Y)=9 THEN DIREC=3:GOTO 380 'Can go left
360 IF Y>0 THEN IF MZA(X,Y-1)=9 THEN DIREC=2:GOTO 380 'Can go down
370 DIREC=MZA(X,Y):GOTO 260 'Carry on backtracking
380 PSET (X*2+2,199-Y*2),1:F%=MZB(X,Y) 'Succesful backtrack - open route
390 IF DIREC=0 THEN F%=(F% AND 14) 'Open route up 1110
400 IF DIREC=1 THEN F%=(F% AND 13) 'Open route right 1101
410 IF DIREC=2 THEN F%=(F% AND 11) 'Open route down 1011
420 IF DIREC=3 THEN F%=(F% AND 7) 'Open route left 0111
430 MZB(X,Y)=F% 'Update node
440 LASTDIR=DIREC:GOTO 80 'Continue from this node
450 X=SIZEX-1  'Select an exit point
460 Y=0
470 IF MZA(X,Y)>3 THEN GOTO 490
480 Y=Y+1:IF Y<SIZEY THEN GOTO 470 ELSE Y=FNRAN(SIZEY)
490 LINE (X*2+2,199-Y*2)-(X*2+4,199-Y*2),1
500 EXITX=X:EXITY=Y
510 MZB(X,Y)=MZB(X,Y) AND 13
520 LOCATE 1,1:PRINT "MAZE COMPLETE":PRINT "HIT ANY KEY TO BEGIN"
530 A$=INKEY$:IF A$="" THEN GOTO 530
540 MZB(ENTX,ENTY)=MZB(ENTX,ENTY) OR 8 'Close up entrance
550 ORIENT=1:Y=ENTY:X=ENTX:SCREEN 1 'Set start position and direction
560 CLS:DEDEND=0 'Begin drawing scene
570 WALL=0:GOSUB 1490 'Process current node
580 LINE (19,160)-(19,20):LINE (299,160)-(299,20)
590 IF F% MOD 2=1 THEN LINE (19,160)-(299,160):LINE (19,20)-(299,20):DEDEND=-1:GOTO 920
600 LINE (63,146)-(63,34):LINE (255,146)-(255,34) 'Depth 1 ****************
610 GOSUB 1390
620 IF WALL THEN GOTO 920
630 IF F%>7 THEN LINE (63,146)-(19,160):LINE (63,34)-(19,20):GOTO 650
640 LINE (63,146)-(19,146):LINE (63,34)-(19,34)
650 IF (F% MOD 4)>1 THEN LINE (255,146)-(299,160):LINE (255,34)-(299,20):GOTO 670
660 LINE (255,146)-(299,146):LINE (255,34)-(299,34)
670 IF F% MOD 2=1 THEN LINE (63,146)-(255,146):LINE (63,34)-(255,34):GOTO 920
680 LINE (99,135)-(99,45):LINE (219,135)-(219,45) 'Depth 2 ****************
690 GOSUB 1460
700 IF WALL THEN GOTO 920
710 IF F%>7 THEN LINE (99,135)-(63,146):LINE (99,45)-(63,34):GOTO 730
720 LINE (99,45)-(63,45):LINE (99,135)-(63,135)
730 IF (F% MOD 4)>1 THEN LINE (219,135)-(255,146):LINE (219,45)-(255,34):GOTO 750
740 LINE (219,135)-(255,135):LINE (219,45)-(255,45)
750 IF F% MOD 2=1 THEN LINE (99,135)-(219,135):LINE (99,45)-(219,45):GOTO 920
760 LINE (129,126)-(129,54):LINE (189,126)-(189,54) 'Depth 3 **************
770 GOSUB 1460
780 IF WALL THEN GOTO 920
790 IF F%>7 THEN LINE (129,126)-(99,135):LINE (129,54)-(99,45):GOTO 810
800 LINE (129,54)-(99,54):LINE (129,126)-(99,126)
810 IF (F% MOD 4)>1 THEN LINE (189,126)-(219,135):LINE (189,54)-(219,45):GOTO 830
820 LINE (189,54)-(219,54):LINE (189,126)-(219,126)
830 IF F% MOD 2=1 THEN LINE (129,126)-(189,126):LINE (129,54)-(189,54):GOTO 920
840 LINE (149,120)-(149,60):LINE (169,120)-(169,60) 'Depth 4 **************
850 GOSUB 1460
860 IF WALL THEN GOTO 920
870 IF F%>7 THEN LINE (149,120)-(129,126):LINE (149,60)-(129,54):GOTO 890
880 LINE (149,120)-(129,120):LINE (149,60)-(129,60)
890 IF (F% MOD 2)>1 THEN LINE (169,120)-(189,126):LINE (169,60)-(189,54):GOTO 910
900 LINE (169,120)-(189,120):LINE (169,60)-(189,60)
910 IF F% MOD 2=1 THEN LINE (149,60)-(169,60):LINE (149,120)-(169,120)
920 MOVE$=INKEY$:IF MOVE$="" THEN GOTO 920 'Get move
930 IF MOVE$<>"H" THEN GOTO 1020
940 LOCATE 1,1:PRINT "YOU ARE AT ";X;"-";Y;" FACING "; 'Help routine
950 ON (ORIENT+1) GOTO 960,970,980,990
960 PRINT "NORTH":GOTO 1000
970 PRINT "EAST":GOTO 1000
980 PRINT "SOUTH":GOTO 1000
990 PRINT "WEST"
1000 PRINT "PRESS ANY KEY TO CONTINUE"
1010 A$=INKEY$:IF A$="" THEN GOTO 1010 ELSE GOTO 1150
1020 IF MOVE$<>"R" THEN GOTO 1050 ELSE ORIENT=ORIENT+1 'Turn right
1030 IF ORIENT=4 THEN ORIENT=0
1040 GOTO 1150
1050 IF MOVE$<>"L" THEN GOTO 1080 ELSE ORIENT=ORIENT-1 'Turn left
1060 IF ORIENT<0 THEN ORIENT=3
1070 GOTO 1150
1080 IF MOVE$="F" AND DEDEND THEN BEEP:GOTO 1150  'Cant go forward
1090 IF MOVE$<>"F" THEN BEEP:GOTO 1150 'Invalid move
1100 ON (ORIENT+1) GOTO 1110,1120,1130,1140 'Move
1110 Y=Y+1:GOTO 1150
1120 X=X+1:GOTO 1150
1130 Y=Y-1:GOTO 1150
1140 X=X-1
1150 ENTX=X:ENTY=Y:IF ENTX>EXITX THEN IF ENTY=EXITY THEN SCREEN 0:CLS:PRINT "WELL DONE!!!":PRINT :END
1160 GOTO 560
1170 IF DIREC MOD 2=0 THEN MZB(X,Y)=10 ELSE MZB(X,Y)=5 'Put in side walls
1180 IF DIREC=LASTDIR THEN RETURN 'Return if not a corner
1190 REM Node properties are stored in array MZB. Each has four bits of relevant
1200 REM information in the form LDRU (left,down,right,up), with a 1 indicating
1210 REM a wall and a 0 a passage. This routine stores the relevant info for
1220 REM corner nodes.
1230 IF LASTDIR=0 THEN IF DIREC=1 THEN F%=9:GOTO 1310
1240 IF LASTDIR=3 THEN IF DIREC=2 THEN F%=9:GOTO 1310
1250 IF LASTDIR=0 THEN IF DIREC=3 THEN F%=3:GOTO 1310
1260 IF LASTDIR=1 THEN IF DIREC=2 THEN F%=3:GOTO 1310
1270 IF LASTDIR=2 THEN IF DIREC=3 THEN F%=6:GOTO 1310
1280 IF LASTDIR=1 THEN IF DIREC=0 THEN F%=6:GOTO 1310
1290 IF LASTDIR=3 THEN IF DIREC=0 THEN F%=12:GOTO 1310
1300 IF LASTDIR=2 THEN IF DIREC=1 THEN F%=12
1310 MZB(X-DX,Y-DY)=F%:LASTDIR=DIREC:RETURN
1320 F%=MZB(X,Y)
1330 REM This routine adds walls to the node to form dead-ends.
1340 IF DIREC=4 THEN F%=F% OR 1:GOTO 1380 'Add wall above
1350 IF DIREC=5 THEN F%=F% OR 2:GOTO 1380 'Add wall on right
1360 IF DIREC=6 THEN F%=F% OR 4:GOTO 1380 'Add wall below
1370 F%=F% OR 8                           'Add wall on left
1380 MZB(X,Y)=F%:RETURN
1390 REM This routine processes the view node by node for the drawing routine.
1400 REM Lines 4070-4100 rotate the node info to the correct orientation.
1410 DX=0:DY=0:ON (ORIENT+1) GOTO 1420,1430,1440,1450
1420 DY=1:GOTO 1460
1430 DX=1:GOTO 1460
1440 DY=-1:GOTO 1460
1450 DX=-1
1460 ENTX=ENTX+DX:ENTY=ENTY+DY:WALL=0
1470 IF ENTX=EXITX+1 THEN IF ENTY=EXITY THEN F%=10:WALL=-1:RETURN
1480 IF ENTX<0 OR ENTY<0 OR ENTX>=SIZEX OR ENTY>=SIZEY THEN F%=15:WALL=-1:RETURN
1490 F%=MZB(ENTX,ENTY):TURNS=ORIENT
1500 CARRY=F% MOD 2:IF TURNS=0 THEN RETURN
1510 F%=F%/2+7*CARRY
1520 TURNS=TURNS-1:GOTO 1500
